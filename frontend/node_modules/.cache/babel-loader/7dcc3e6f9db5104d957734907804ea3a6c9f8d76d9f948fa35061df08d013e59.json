{"ast":null,"code":"var _jsxFileName = \"D:\\\\prem\\\\experiment\\\\Drone Mission Planner\\\\frontend\\\\src\\\\components\\\\MissionForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { createMission } from \"../services/missionService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cityData = {\n  \"New York\": {\n    lat: 40.7128,\n    lng: -74.0060\n  },\n  \"Los Angeles\": {\n    lat: 34.0522,\n    lng: -118.2437\n  },\n  \"London\": {\n    lat: 51.5074,\n    lng: -0.1278\n  },\n  \"Delhi\": {\n    lat: 28.6139,\n    lng: 77.2090\n  },\n  \"Tokyo\": {\n    lat: 35.682839,\n    lng: 139.759455\n  },\n  \"Paris\": {\n    lat: 48.8566,\n    lng: 2.3522\n  }\n};\nconst MissionForm = ({\n  onMissionAdded\n}) => {\n  _s();\n  const [form, setForm] = useState({\n    name: \"\",\n    startCity: \"\",\n    destCity: \"\"\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!form.startCity || !form.destCity) {\n      alert(\"Please select both Start and Destination cities.\");\n      return;\n    }\n\n    // Get latitude & longitude from cityData\n    const startCoords = cityData[form.startCity];\n    const destCoords = cityData[form.destCity];\n    const formattedMission = {\n      name: form.name,\n      startCity: form.startCity,\n      destCity: form.destCity,\n      startLat: startCoords.lat,\n      startLng: startCoords.lng,\n      destLat: destCoords.lat,\n      destLng: destCoords.lng\n    };\n    await createMission(formattedMission);\n    setForm({\n      name: \"\",\n      startCity: \"\",\n      destCity: \"\"\n    });\n    onMissionAdded();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Mission Name\",\n      className: \"form-control mb-2\",\n      onChange: e => setForm({\n        ...form,\n        name: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Start City:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        value: form.startCity,\n        onChange: e => setForm({\n          ...form,\n          startCity: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), Object.keys(cityData).map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Destination City:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        value: form.destCity,\n        onChange: e => setForm({\n          ...form,\n          destCity: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), Object.keys(cityData).map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Create Mission\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(MissionForm, \"D9wVSsvuT468NCkVR+ezpeBR338=\");\n_c = MissionForm;\nexport default MissionForm;\nvar _c;\n$RefreshReg$(_c, \"MissionForm\");","map":{"version":3,"names":["React","useState","createMission","jsxDEV","_jsxDEV","cityData","lat","lng","MissionForm","onMissionAdded","_s","form","setForm","name","startCity","destCity","handleSubmit","e","preventDefault","alert","startCoords","destCoords","formattedMission","startLat","startLng","destLat","destLng","onSubmit","className","children","type","placeholder","onChange","target","value","required","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","city","_c","$RefreshReg$"],"sources":["D:/prem/experiment/Drone Mission Planner/frontend/src/components/MissionForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { createMission } from \"../services/missionService\";\r\n\r\nconst cityData = {\r\n    \"New York\": { lat: 40.7128, lng: -74.0060 },\r\n    \"Los Angeles\": { lat: 34.0522, lng: -118.2437 },\r\n    \"London\": { lat: 51.5074, lng: -0.1278 },\r\n    \"Delhi\": { lat: 28.6139, lng: 77.2090 },\r\n    \"Tokyo\": { lat: 35.682839, lng: 139.759455 },\r\n    \"Paris\": { lat: 48.8566, lng: 2.3522 }\r\n};\r\n\r\nconst MissionForm = ({ onMissionAdded }) => {\r\n    const [form, setForm] = useState({ name: \"\", startCity: \"\", destCity: \"\" });\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!form.startCity || !form.destCity) {\r\n            alert(\"Please select both Start and Destination cities.\");\r\n            return;\r\n        }\r\n\r\n        // Get latitude & longitude from cityData\r\n        const startCoords = cityData[form.startCity];\r\n        const destCoords = cityData[form.destCity];\r\n\r\n        const formattedMission = {\r\n          name: form.name,\r\n          startCity: form.startCity,\r\n          destCity: form.destCity,\r\n          startLat: startCoords.lat,\r\n          startLng: startCoords.lng,\r\n          destLat: destCoords.lat,\r\n          destLng: destCoords.lng\r\n      };\r\n\r\n        await createMission(formattedMission);\r\n        setForm({ name: \"\", startCity: \"\", destCity: \"\" });\r\n        onMissionAdded();\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"mt-3\">\r\n            <input type=\"text\" placeholder=\"Mission Name\" className=\"form-control mb-2\"\r\n                onChange={(e) => setForm({ ...form, name: e.target.value })} required />\r\n\r\n            <div className=\"mb-2\">\r\n                <label className=\"form-label\">Start City:</label>\r\n                <select className=\"form-select\"\r\n                    value={form.startCity}\r\n                    onChange={(e) => setForm({ ...form, startCity: e.target.value })} required>\r\n                    <option value=\"\">Select a city</option>\r\n                    {Object.keys(cityData).map((city) => (\r\n                        <option key={city} value={city}>{city}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"mb-2\">\r\n                <label className=\"form-label\">Destination City:</label>\r\n                <select className=\"form-select\"\r\n                    value={form.destCity}\r\n                    onChange={(e) => setForm({ ...form, destCity: e.target.value })} required>\r\n                    <option value=\"\">Select a city</option>\r\n                    {Object.keys(cityData).map((city) => (\r\n                        <option key={city} value={city}>{city}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary\">Create Mission</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default MissionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}