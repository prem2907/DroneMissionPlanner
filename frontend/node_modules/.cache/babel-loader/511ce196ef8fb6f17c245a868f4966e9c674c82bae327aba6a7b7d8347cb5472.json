{"ast":null,"code":"var _jsxFileName = \"D:\\\\prem\\\\experiment\\\\Drone Mission Planner\\\\frontend\\\\src\\\\components\\\\MapDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker, Polyline } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapDisplay = ({\n  missions\n}) => {\n  _s();\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"400px\"\n  };\n\n  // Set the center dynamically based on the first mission’s start location\n  const center = missions.length > 0 ? {\n    lat: missions[0].startLat,\n    lng: missions[0].startLng\n  } : {\n    lat: 28.6139,\n    lng: 77.2090\n  }; // Default to Delhi if no missions exist\n\n  const [visibleMissions, setVisibleMissions] = useState(missions);\n  useEffect(() => {\n    // Filter out \"Cancelled\" missions immediately\n    const updatedMissions = missions.filter(mission => mission.status !== \"Cancelled\");\n    setVisibleMissions(updatedMissions);\n\n    // Remove \"Completed\" routes after 5 seconds\n    const timeoutIds = updatedMissions.map(mission => {\n      if (mission.status === \"Completed\") {\n        return setTimeout(() => {\n          setVisibleMissions(prev => prev.filter(m => m._id !== mission._id));\n        }, 5000);\n      }\n      return null;\n    });\n    return () => {\n      timeoutIds.forEach(id => id && clearTimeout(id));\n    };\n  }, [missions]);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: center,\n      zoom: 5,\n      children: visibleMissions.map(mission => {\n        let lineColor = \"#FF0000\"; // Default red\n        if (mission.status === \"In Progress\") lineColor = \"#0000FF\"; // Blue\n        if (mission.status === \"Completed\") lineColor = \"#008000\"; // Green\n\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: mission.startLat,\n              lng: mission.startLng\n            },\n            label: mission.startCity || \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: mission.destLat,\n              lng: mission.destLng\n            },\n            label: mission.destCity || \"Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n            path: [{\n              lat: mission.startLat,\n              lng: mission.startLng\n            }, ...(mission.waypoints || []).map(wp => ({\n              lat: wp.lat,\n              lng: wp.lng\n            })), {\n              lat: mission.destLat,\n              lng: mission.destLng\n            }],\n            options: {\n              strokeColor: lineColor,\n              strokeOpacity: 0.8,\n              strokeWeight: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, mission._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(MapDisplay, \"W4n2eN8NfPcaWpUFx43IYnZlgac=\");\n_c = MapDisplay;\nexport default MapDisplay;\nvar _c;\n$RefreshReg$(_c, \"MapDisplay\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","Polyline","jsxDEV","_jsxDEV","MapDisplay","missions","_s","mapContainerStyle","width","height","center","length","lat","startLat","lng","startLng","visibleMissions","setVisibleMissions","updatedMissions","filter","mission","status","timeoutIds","map","setTimeout","prev","m","_id","forEach","id","clearTimeout","googleMapsApiKey","children","zoom","lineColor","Fragment","position","label","startCity","fileName","_jsxFileName","lineNumber","columnNumber","destLat","destLng","destCity","path","waypoints","wp","options","strokeColor","strokeOpacity","strokeWeight","_c","$RefreshReg$"],"sources":["D:/prem/experiment/Drone Mission Planner/frontend/src/components/MapDisplay.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { GoogleMap, LoadScript, Marker, Polyline } from \"@react-google-maps/api\";\r\n\r\nconst MapDisplay = ({ missions }) => {\r\n    const mapContainerStyle = { width: \"100%\", height: \"400px\" };\r\n\r\n    // Set the center dynamically based on the first mission’s start location\r\n    const center = missions.length > 0\r\n        ? { lat: missions[0].startLat, lng: missions[0].startLng }\r\n        : { lat: 28.6139, lng: 77.2090 }; // Default to Delhi if no missions exist\r\n\r\n    const [visibleMissions, setVisibleMissions] = useState(missions);\r\n\r\n    useEffect(() => {\r\n        // Filter out \"Cancelled\" missions immediately\r\n        const updatedMissions = missions.filter(mission => mission.status !== \"Cancelled\");\r\n        setVisibleMissions(updatedMissions);\r\n\r\n        // Remove \"Completed\" routes after 5 seconds\r\n        const timeoutIds = updatedMissions.map((mission) => {\r\n            if (mission.status === \"Completed\") {\r\n                return setTimeout(() => {\r\n                    setVisibleMissions((prev) => prev.filter((m) => m._id !== mission._id));\r\n                }, 5000);\r\n            }\r\n            return null;\r\n        });\r\n\r\n        return () => {\r\n            timeoutIds.forEach(id => id && clearTimeout(id));\r\n        };\r\n    }, [missions]);\r\n\r\n    return (\r\n        <LoadScript googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\">\r\n            <GoogleMap mapContainerStyle={mapContainerStyle} center={center} zoom={5}>\r\n                {visibleMissions.map((mission) => {\r\n                    let lineColor = \"#FF0000\"; // Default red\r\n                    if (mission.status === \"In Progress\") lineColor = \"#0000FF\"; // Blue\r\n                    if (mission.status === \"Completed\") lineColor = \"#008000\"; // Green\r\n\r\n                    return (\r\n                        <React.Fragment key={mission._id}>\r\n                            {/* Display Start and Destination City Names */}\r\n                            <Marker position={{ lat: mission.startLat, lng: mission.startLng }} label={mission.startCity || \"Start\"} />\r\n                            <Marker position={{ lat: mission.destLat, lng: mission.destLng }} label={mission.destCity || \"Destination\"} />\r\n\r\n                            <Polyline\r\n                                path={[\r\n                                    { lat: mission.startLat, lng: mission.startLng },\r\n                                    ...(mission.waypoints || []).map((wp) => ({\r\n                                        lat: wp.lat,\r\n                                        lng: wp.lng,\r\n                                    })),\r\n                                    { lat: mission.destLat, lng: mission.destLng }\r\n                                ]}\r\n                                options={{ strokeColor: lineColor, strokeOpacity: 0.8, strokeWeight: 4 }}\r\n                            />\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </GoogleMap>\r\n        </LoadScript>\r\n    );\r\n};\r\n\r\nexport default MapDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}