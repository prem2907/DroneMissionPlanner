{"ast":null,"code":"var _jsxFileName = \"D:\\\\prem\\\\experiment\\\\Drone Mission Planner\\\\frontend\\\\src\\\\pages\\\\MissionPlanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getMissions } from \"../services/missionService\";\nimport { io } from \"socket.io-client\";\nimport MissionForm from \"../components/MissionForm\";\nimport MapDisplay from \"../components/MapDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\"); // Connect to backend WebSocket\n\nconst MissionPlanner = () => {\n  _s();\n  const [missions, setMissions] = useState([]);\n  useEffect(() => {\n    fetchMissions();\n\n    // Listen for real-time mission updates\n    socket.on(\"missionAdded\", newMission => {\n      setMissions(prevMissions => [...prevMissions, newMission]);\n    });\n    return () => {\n      socket.off(\"missionAdded\");\n    };\n  }, []);\n  const fetchMissions = async () => {\n    const data = await getMissions();\n    setMissions(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mission Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MissionForm, {\n      onMissionAdded: fetchMissions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapDisplay, {\n      missions: missions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(MissionPlanner, \"nYAUA2I09k42+O6u8IAIkuiO8T0=\");\n_c = MissionPlanner;\nexport default MissionPlanner;\nvar _c;\n$RefreshReg$(_c, \"MissionPlanner\");","map":{"version":3,"names":["React","useEffect","useState","getMissions","io","MissionForm","MapDisplay","jsxDEV","_jsxDEV","socket","MissionPlanner","_s","missions","setMissions","fetchMissions","on","newMission","prevMissions","off","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMissionAdded","_c","$RefreshReg$"],"sources":["D:/prem/experiment/Drone Mission Planner/frontend/src/pages/MissionPlanner.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getMissions } from \"../services/missionService\";\r\nimport { io } from \"socket.io-client\";\r\nimport MissionForm from \"../components/MissionForm\";\r\nimport MapDisplay from \"../components/MapDisplay\";\r\n\r\nconst socket = io(\"http://localhost:5000\"); // Connect to backend WebSocket\r\n\r\nconst MissionPlanner = () => {\r\n    const [missions, setMissions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchMissions();\r\n\r\n        // Listen for real-time mission updates\r\n        socket.on(\"missionAdded\", (newMission) => {\r\n            setMissions((prevMissions) => [...prevMissions, newMission]);\r\n        });\r\n\r\n        return () => {\r\n            socket.off(\"missionAdded\");\r\n        };\r\n    }, []);\r\n\r\n    const fetchMissions = async () => {\r\n        const data = await getMissions();\r\n        setMissions(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h2>Mission Planner</h2>\r\n            <MissionForm onMissionAdded={fetchMissions} />\r\n            <MapDisplay missions={missions} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MissionPlanner;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,MAAM,GAAGL,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAE5C,MAAMM,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZa,aAAa,CAAC,CAAC;;IAEf;IACAL,MAAM,CAACM,EAAE,CAAC,cAAc,EAAGC,UAAU,IAAK;MACtCH,WAAW,CAAEI,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,UAAU,CAAC,CAAC;IAChE,CAAC,CAAC;IAEF,OAAO,MAAM;MACTP,MAAM,CAACS,GAAG,CAAC,cAAc,CAAC;IAC9B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMJ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMK,IAAI,GAAG,MAAMhB,WAAW,CAAC,CAAC;IAChCU,WAAW,CAACM,IAAI,CAAC;EACrB,CAAC;EAED,oBACIX,OAAA;IAAKY,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3Bb,OAAA;MAAAa,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBjB,OAAA,CAACH,WAAW;MAACqB,cAAc,EAAEZ;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9CjB,OAAA,CAACF,UAAU;MAACM,QAAQ,EAAEA;IAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEd,CAAC;AAACd,EAAA,CA5BID,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AA8BpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}