{"ast":null,"code":"var _jsxFileName = \"D:\\\\prem\\\\experiment\\\\Drone Mission Planner\\\\frontend\\\\src\\\\pages\\\\MissionPlanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getMissions, updateMissionStatus } from \"../services/missionService\";\nimport { io } from \"socket.io-client\";\nimport MissionForm from \"../components/MissionForm\";\nimport MapDisplay from \"../components/MapDisplay\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\"); // Connect to WebSocket server\n\nconst MissionPlanner = () => {\n  _s();\n  const [missions, setMissions] = useState([]);\n  useEffect(() => {\n    fetchMissions();\n\n    // Listen for real-time mission updates\n    socket.on(\"missionAdded\", newMission => {\n      setMissions(prevMissions => [...prevMissions, newMission]);\n    });\n    socket.on(\"missionUpdated\", updatedMission => {\n      setMissions(prevMissions => prevMissions.map(mission => mission._id === updatedMission._id ? updatedMission : mission));\n    });\n    return () => {\n      socket.off(\"missionAdded\");\n      socket.off(\"missionUpdated\");\n    };\n  }, []);\n  const fetchMissions = async () => {\n    const data = await getMissions();\n    setMissions(data);\n  };\n  const handleStatusUpdate = async (id, newStatus) => {\n    await updateMissionStatus(id, newStatus);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mission Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MissionForm, {\n      onMissionAdded: fetchMissions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapDisplay, {\n      missions: missions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group mt-3\",\n      children: missions.map(mission => {\n        // Background color based on status\n        let bgColor = \"\";\n        if (mission.status === \"Cancelled\") bgColor = \"bg-secondary\"; // Grey\n        if (mission.status === \"Completed\") bgColor = \"bg-success text-white\"; // Green\n        if (mission.status === \"Pending\") bgColor = \"bg-light\"; // Default\n        if (mission.status === \"In Progress\") bgColor = \"bg-warning\"; // Yellow\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `list-group-item d-flex justify-content-between align-items-center ${bgColor}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: mission.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), \" - \", mission.startCity, \" \\u279D \", mission.destCity, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `badge bg-dark ms-2`,\n              children: mission.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [mission.status === \"Pending\" && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning btn-sm me-2\",\n              onClick: () => handleStatusUpdate(mission._id, \"In Progress\"),\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this), mission.status === \"In Progress\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger btn-sm me-2\",\n                onClick: () => handleStatusUpdate(mission._id, \"Cancelled\"),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success btn-sm\",\n                onClick: () => handleStatusUpdate(mission._id, \"Completed\"),\n                children: \"Complete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, mission._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(MissionPlanner, \"nYAUA2I09k42+O6u8IAIkuiO8T0=\");\n_c = MissionPlanner;\nexport default MissionPlanner;\nvar _c;\n$RefreshReg$(_c, \"MissionPlanner\");","map":{"version":3,"names":["React","useEffect","useState","getMissions","updateMissionStatus","io","MissionForm","MapDisplay","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","MissionPlanner","_s","missions","setMissions","fetchMissions","on","newMission","prevMissions","updatedMission","map","mission","_id","off","data","handleStatusUpdate","id","newStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMissionAdded","bgColor","status","name","startCity","destCity","onClick","_c","$RefreshReg$"],"sources":["D:/prem/experiment/Drone Mission Planner/frontend/src/pages/MissionPlanner.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getMissions, updateMissionStatus } from \"../services/missionService\";\r\nimport { io } from \"socket.io-client\";\r\nimport MissionForm from \"../components/MissionForm\";\r\nimport MapDisplay from \"../components/MapDisplay\";\r\n\r\nconst socket = io(\"http://localhost:5000\"); // Connect to WebSocket server\r\n\r\nconst MissionPlanner = () => {\r\n    const [missions, setMissions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchMissions();\r\n\r\n        // Listen for real-time mission updates\r\n        socket.on(\"missionAdded\", (newMission) => {\r\n            setMissions((prevMissions) => [...prevMissions, newMission]);\r\n        });\r\n\r\n        socket.on(\"missionUpdated\", (updatedMission) => {\r\n            setMissions((prevMissions) =>\r\n                prevMissions.map((mission) =>\r\n                    mission._id === updatedMission._id ? updatedMission : mission\r\n                )\r\n            );\r\n        });\r\n\r\n        return () => {\r\n            socket.off(\"missionAdded\");\r\n            socket.off(\"missionUpdated\");\r\n        };\r\n    }, []);\r\n\r\n    const fetchMissions = async () => {\r\n        const data = await getMissions();\r\n        setMissions(data);\r\n    };\r\n\r\n    const handleStatusUpdate = async (id, newStatus) => {\r\n        await updateMissionStatus(id, newStatus);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h2>Mission Planner</h2>\r\n            <MissionForm onMissionAdded={fetchMissions} />\r\n            <MapDisplay missions={missions} />\r\n\r\n            <ul className=\"list-group mt-3\">\r\n                {missions.map((mission) => {\r\n                    // Background color based on status\r\n                    let bgColor = \"\";\r\n                    if (mission.status === \"Cancelled\") bgColor = \"bg-secondary\"; // Grey\r\n                    if (mission.status === \"Completed\") bgColor = \"bg-success text-white\"; // Green\r\n                    if (mission.status === \"Pending\") bgColor = \"bg-light\"; // Default\r\n                    if (mission.status === \"In Progress\") bgColor = \"bg-warning\"; // Yellow\r\n\r\n                    return (\r\n                        <li key={mission._id} className={`list-group-item d-flex justify-content-between align-items-center ${bgColor}`}>\r\n                            <div>\r\n                                <strong>{mission.name}</strong> - {mission.startCity} ‚ûù {mission.destCity}\r\n                                <span className={`badge bg-dark ms-2`}>{mission.status}</span>\r\n                            </div>\r\n                            <div>\r\n                                {/* Show only relevant button for each mission */}\r\n                                {mission.status === \"Pending\" && (\r\n                                    <button className=\"btn btn-warning btn-sm me-2\"\r\n                                        onClick={() => handleStatusUpdate(mission._id, \"In Progress\")}>\r\n                                        Start\r\n                                    </button>\r\n                                )}\r\n                                {mission.status === \"In Progress\" && (\r\n                                    <>\r\n                                        <button className=\"btn btn-danger btn-sm me-2\"\r\n                                            onClick={() => handleStatusUpdate(mission._id, \"Cancelled\")}>\r\n                                            Cancel\r\n                                        </button>\r\n                                        <button className=\"btn btn-success btn-sm\"\r\n                                            onClick={() => handleStatusUpdate(mission._id, \"Completed\")}>\r\n                                            Complete\r\n                                        </button>\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MissionPlanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}