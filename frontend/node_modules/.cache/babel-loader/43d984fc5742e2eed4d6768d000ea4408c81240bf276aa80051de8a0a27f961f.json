{"ast":null,"code":"var _jsxFileName = \"D:\\\\prem\\\\experiment\\\\Drone Mission Planner\\\\frontend\\\\src\\\\components\\\\MapDisplay.jsx\";\nimport React from \"react\";\nimport { GoogleMap, LoadScript, Marker, Polyline } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapDisplay = ({\n  missions\n}) => {\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"400px\"\n  };\n  const center = {\n    lat: 28.6139,\n    lng: 77.2090\n  }; // Default center (Delhi, India)\n\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyDW1i1Y2qczfWkDbe42tlZNTBlIXBHxSe4\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: center,\n      zoom: 10,\n      children: missions.map(mission => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: parseFloat(mission.startLat),\n            lng: parseFloat(mission.startLng)\n          },\n          label: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: parseFloat(mission.destLat),\n            lng: parseFloat(mission.destLng)\n          },\n          label: \"End\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          path: [{\n            lat: parseFloat(mission.startLat),\n            lng: parseFloat(mission.startLng)\n          }, ...(mission.waypoints || []).map(wp => ({\n            lat: parseFloat(wp.lat),\n            lng: parseFloat(wp.lng)\n          })), {\n            lat: parseFloat(mission.destLat),\n            lng: parseFloat(mission.destLng)\n          }],\n          options: {\n            strokeColor: \"#FF0000\",\n            strokeOpacity: 0.8,\n            strokeWeight: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this)]\n      }, mission._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = MapDisplay;\nexport default MapDisplay;\nvar _c;\n$RefreshReg$(_c, \"MapDisplay\");","map":{"version":3,"names":["React","GoogleMap","LoadScript","Marker","Polyline","jsxDEV","_jsxDEV","MapDisplay","missions","mapContainerStyle","width","height","center","lat","lng","googleMapsApiKey","children","zoom","map","mission","Fragment","position","parseFloat","startLat","startLng","label","fileName","_jsxFileName","lineNumber","columnNumber","destLat","destLng","path","waypoints","wp","options","strokeColor","strokeOpacity","strokeWeight","_id","_c","$RefreshReg$"],"sources":["D:/prem/experiment/Drone Mission Planner/frontend/src/components/MapDisplay.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { GoogleMap, LoadScript, Marker, Polyline } from \"@react-google-maps/api\";\r\n\r\nconst MapDisplay = ({ missions }) => {\r\n    const mapContainerStyle = { width: \"100%\", height: \"400px\" };\r\n    const center = { lat: 28.6139, lng: 77.2090 }; // Default center (Delhi, India)\r\n\r\n    return (\r\n        <LoadScript googleMapsApiKey=\"AIzaSyDW1i1Y2qczfWkDbe42tlZNTBlIXBHxSe4\">\r\n            <GoogleMap mapContainerStyle={mapContainerStyle} center={center} zoom={10}>\r\n                {missions.map((mission) => (\r\n                    <React.Fragment key={mission._id}>\r\n                        <Marker position={{ lat: parseFloat(mission.startLat), lng: parseFloat(mission.startLng) }} label=\"Start\" />\r\n                        <Marker position={{ lat: parseFloat(mission.destLat), lng: parseFloat(mission.destLng) }} label=\"End\" />\r\n                        <Polyline\r\n                            path={[\r\n                                { lat: parseFloat(mission.startLat), lng: parseFloat(mission.startLng) },\r\n                                ...(mission.waypoints || []).map((wp) => ({\r\n                                    lat: parseFloat(wp.lat),\r\n                                    lng: parseFloat(wp.lng),\r\n                                })),\r\n                                { lat: parseFloat(mission.destLat), lng: parseFloat(mission.destLng) }\r\n                            ]}\r\n                            options={{ strokeColor: \"#FF0000\", strokeOpacity: 0.8, strokeWeight: 2 }}\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n            </GoogleMap>\r\n        </LoadScript>\r\n    );\r\n};\r\n\r\nexport default MapDisplay;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACjC,MAAMC,iBAAiB,GAAG;IAAEC,KAAK,EAAE,MAAM;IAAEC,MAAM,EAAE;EAAQ,CAAC;EAC5D,MAAMC,MAAM,GAAG;IAAEC,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,CAAC,CAAC;;EAE/C,oBACIR,OAAA,CAACJ,UAAU;IAACa,gBAAgB,EAAC,yCAAyC;IAAAC,QAAA,eAClEV,OAAA,CAACL,SAAS;MAACQ,iBAAiB,EAAEA,iBAAkB;MAACG,MAAM,EAAEA,MAAO;MAACK,IAAI,EAAE,EAAG;MAAAD,QAAA,EACrER,QAAQ,CAACU,GAAG,CAAEC,OAAO,iBAClBb,OAAA,CAACN,KAAK,CAACoB,QAAQ;QAAAJ,QAAA,gBACXV,OAAA,CAACH,MAAM;UAACkB,QAAQ,EAAE;YAAER,GAAG,EAAES,UAAU,CAACH,OAAO,CAACI,QAAQ,CAAC;YAAET,GAAG,EAAEQ,UAAU,CAACH,OAAO,CAACK,QAAQ;UAAE,CAAE;UAACC,KAAK,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5GvB,OAAA,CAACH,MAAM;UAACkB,QAAQ,EAAE;YAAER,GAAG,EAAES,UAAU,CAACH,OAAO,CAACW,OAAO,CAAC;YAAEhB,GAAG,EAAEQ,UAAU,CAACH,OAAO,CAACY,OAAO;UAAE,CAAE;UAACN,KAAK,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxGvB,OAAA,CAACF,QAAQ;UACL4B,IAAI,EAAE,CACF;YAAEnB,GAAG,EAAES,UAAU,CAACH,OAAO,CAACI,QAAQ,CAAC;YAAET,GAAG,EAAEQ,UAAU,CAACH,OAAO,CAACK,QAAQ;UAAE,CAAC,EACxE,GAAG,CAACL,OAAO,CAACc,SAAS,IAAI,EAAE,EAAEf,GAAG,CAAEgB,EAAE,KAAM;YACtCrB,GAAG,EAAES,UAAU,CAACY,EAAE,CAACrB,GAAG,CAAC;YACvBC,GAAG,EAAEQ,UAAU,CAACY,EAAE,CAACpB,GAAG;UAC1B,CAAC,CAAC,CAAC,EACH;YAAED,GAAG,EAAES,UAAU,CAACH,OAAO,CAACW,OAAO,CAAC;YAAEhB,GAAG,EAAEQ,UAAU,CAACH,OAAO,CAACY,OAAO;UAAE,CAAC,CACxE;UACFI,OAAO,EAAE;YAAEC,WAAW,EAAE,SAAS;YAAEC,aAAa,EAAE,GAAG;YAAEC,YAAY,EAAE;UAAE;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CAAC;MAAA,GAbeV,OAAO,CAACoB,GAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAchB,CACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAErB,CAAC;AAACW,EAAA,GA3BIjC,UAAU;AA6BhB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}