{"ast":null,"code":"const API_URL = \"http://localhost:5000/api/missions\";\n\n// Fetch all missions\nexport const getMissions = async () => {\n  const response = await fetch(API_URL);\n  return response.json();\n};\n\n// Create a new mission\nexport const createMission = async mission => {\n  await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(mission)\n  });\n};\n\n// Update mission status\nexport const updateMissionStatus = async (id, status) => {\n  await fetch(`${API_URL}/${id}/status`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      status\n    })\n  });\n};\n\n// Delete a mission by ID\nexport const deleteMission = async id => {\n  try {\n    console.log(`ðŸ“¤ Sending DELETE request for mission ID: ${id}`);\n    const response = await fetch(`http://localhost:5000/api/missions/${id}`, {\n      method: \"DELETE\"\n    });\n    const textResponse = await response.text(); // Read response as text\n    console.log(\"ðŸ“¥ Raw Response:\", textResponse);\n    if (!response.ok) {\n      throw new Error(`Server error: ${response.status} - ${textResponse}`);\n    }\n    const data = JSON.parse(textResponse); // Convert to JSON if valid\n    console.log(\"âœ… Delete response:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"ðŸ”¥ Error deleting mission:\", error);\n    alert(error.message);\n  }\n};","map":{"version":3,"names":["API_URL","getMissions","response","fetch","json","createMission","mission","method","headers","body","JSON","stringify","updateMissionStatus","id","status","deleteMission","console","log","textResponse","text","ok","Error","data","parse","error","alert","message"],"sources":["D:/prem/experiment/Drone Mission Planner/frontend/src/services/missionService.js"],"sourcesContent":["const API_URL = \"http://localhost:5000/api/missions\";\r\n\r\n// Fetch all missions\r\nexport const getMissions = async () => {\r\n    const response = await fetch(API_URL);\r\n    return response.json();\r\n};\r\n\r\n// Create a new mission\r\nexport const createMission = async (mission) => {\r\n    await fetch(API_URL, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(mission),\r\n    });\r\n};\r\n\r\n// Update mission status\r\nexport const updateMissionStatus = async (id, status) => {\r\n    await fetch(`${API_URL}/${id}/status`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ status }),\r\n    });\r\n};\r\n\r\n// Delete a mission by ID\r\nexport const deleteMission = async (id) => {\r\n    try {\r\n        console.log(`ðŸ“¤ Sending DELETE request for mission ID: ${id}`);\r\n\r\n        const response = await fetch(`http://localhost:5000/api/missions/${id}`, {\r\n            method: \"DELETE\"\r\n        });\r\n\r\n        const textResponse = await response.text(); // Read response as text\r\n        console.log(\"ðŸ“¥ Raw Response:\", textResponse);\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Server error: ${response.status} - ${textResponse}`);\r\n        }\r\n\r\n        const data = JSON.parse(textResponse); // Convert to JSON if valid\r\n        console.log(\"âœ… Delete response:\", data);\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.error(\"ðŸ”¥ Error deleting mission:\", error);\r\n        alert(error.message);\r\n    }\r\n};\r\n\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,oCAAoC;;AAEpD;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAO,CAAC;EACrC,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC1B,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC5C,MAAMH,KAAK,CAACH,OAAO,EAAE;IACjBO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAChC,CAAC,CAAC;AACN,CAAC;;AAED;AACA,OAAO,MAAMM,mBAAmB,GAAG,MAAAA,CAAOC,EAAE,EAAEC,MAAM,KAAK;EACrD,MAAMX,KAAK,CAAC,GAAGH,OAAO,IAAIa,EAAE,SAAS,EAAE;IACnCN,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEG;IAAO,CAAC;EACnC,CAAC,CAAC;AACN,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOF,EAAE,IAAK;EACvC,IAAI;IACAG,OAAO,CAACC,GAAG,CAAC,6CAA6CJ,EAAE,EAAE,CAAC;IAE9D,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsCU,EAAE,EAAE,EAAE;MACrEN,MAAM,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMW,YAAY,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5CH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,YAAY,CAAC;IAE7C,IAAI,CAAChB,QAAQ,CAACkB,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,iBAAiBnB,QAAQ,CAACY,MAAM,MAAMI,YAAY,EAAE,CAAC;IACzE;IAEA,MAAMI,IAAI,GAAGZ,IAAI,CAACa,KAAK,CAACL,YAAY,CAAC,CAAC,CAAC;IACvCF,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEK,IAAI,CAAC;IAEvC,OAAOA,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZR,OAAO,CAACQ,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClDC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;EACxB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}